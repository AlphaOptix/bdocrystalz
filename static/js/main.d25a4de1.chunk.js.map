{"version":3,"sources":["components/TableView.js","components/CardView.js","components/FilterPanel.js","components/DataView.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","icon","margin","name","fontWeight","textDecoration","color","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","TableView","crystals","classes","TableContainer","component","Paper","Table","TableHead","TableCell","width","TableBody","map","crystal","className","src","alt","Link","grade","target","rel","href","id","effect","split","i","breakChance","socket","bottomGutter","marginBottom","noBottomPad","paddingBottom","CardComponent","Fragment","Card","CardActionArea","CardHeader","avatar","Avatar","title","Typography","variant","CardContent","Grid","container","direction","justify","alignItems","spacing","item","xs","FilterPanel","setCrystals","useState","anchorEl","sockets","effects","grades","value","state","setState","searchValue","setSearchValue","socketValue","setSocketValue","breakValue","setBreakValue","effectValue","setEffectValue","gradeValue","setGradeValue","filterTimeout","useRef","useEffect","handleKeyUp","e","code","s","document","addEventListener","removeEventListener","socketList","Set","effectList","breakList","forEach","add","plusIndex","indexOf","substr","trim","delete","sort","handleClose","clearTimeout","current","filteredCrystals","setTimeout","filter","toUpperCase","includes","hasEffect","open","Boolean","undefined","style","display","justifyContent","flexDirection","Button","disableElevation","onClick","event","currentTarget","Popover","onClose","placement","disablePortal","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","padding","FormControl","InputLabel","htmlFor","shrink","Input","placeholder","onChange","Select","labelId","autoWidth","MenuItem","selected","chance","textAlign","paddingTop","withWidth","view","crystalData","push","isWidthDown","CardView","darkTheme","createMuiTheme","type","responsiveFontSizes","App","ThemeProvider","CssBaseline","Container","gutterBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d25a4de1.chunk.js","sourcesContent":["import { \n    Link,\n    makeStyles, \n    Paper,\n    Table, \n    TableBody, \n    TableCell, \n    TableContainer,\n    TableHead, \n    TableRow,\n    withStyles\n} from '@material-ui/core';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n    icon: {\n        margin: '10px 10px 10px 5px'\n    },\n    name: {\n        fontWeight: 'bold',\n        textDecoration: 'none !important',\n        '&:hover': {\n            textDecoration: 'underline !important'\n        } \n    },\n    'rarity-4': {\n        color: '#d36300 !important'\n    },\n    'rarity-3': {\n        color: '#f6c232 !important'\n    },\n    'rarity-2': {\n        color: '#0391c4 !important'\n    },\n    'rarity-1': {\n        color: '#5ff369 !important'\n    },\n    'rarity-0': {\n        color: '#fff !important'\n    }\n})\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nfunction TableView({crystals}){\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow key=\"header-row\">\n                        <TableCell width=\"5%\"></TableCell>\n                        <TableCell width=\"40%\">Crystal</TableCell>\n                        <TableCell>Effect</TableCell>\n                        <TableCell width=\"10%\">Break Chance</TableCell>\n                        <TableCell width=\"15%\">Socket</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {crystals.map((crystal) => {\n                        return (\n                            <StyledTableRow key={`crystal-${crystal.id}`}>\n                                <TableCell><img className={classes['icon']} src={crystal.icon} alt=\"icon\" /></TableCell>\n                                <TableCell><Link className={`${classes['name']} ${classes[\"rarity-\" + crystal.grade]}`} target=\"_blank\" rel=\"noreferrer\" href={`https://bdocodex.com/us/item/${crystal.id}`}>{crystal.name}</Link></TableCell>\n                                <TableCell>\n                                    {crystal.effect.split(',').map((effect, i) => {\n                                        return (\n                                            <div key={`effect${effect + i}`}>\n                                                {effect}&nbsp;\n                                            </div>\n                                        )\n                                    })}\n                                </TableCell>\n                                <TableCell>{crystal.breakChance}</TableCell>\n                                <TableCell>{crystal.socket}</TableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default TableView;","import React from 'react';\nimport { \n    Card, \n    CardHeader, \n    CardContent, \n    Avatar, \n    makeStyles, \n    Typography, \n    CardActionArea,\n    Grid\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    icon: {\n        margin: '10px 10px 10px 5px'\n    },\n    name: {\n        fontWeight: 'bold',\n        textDecoration: 'none !important',\n        '&:hover': {\n            textDecoration: 'underline !important'\n        } \n    },\n    bottomGutter: {\n        marginBottom: 10\n    },\n    noBottomPad: {\n        paddingBottom: 0\n    },\n    'rarity-4': {\n        color: '#d36300 !important'\n    },\n    'rarity-3': {\n        color: '#f6c232 !important'\n    },\n    'rarity-2': {\n        color: '#0391c4 !important'\n    },\n    'rarity-1': {\n        color: '#5ff369 !important'\n    },\n    'rarity-0': {\n        color: '#fff !important'\n    }\n})\n\nfunction CardComponent({crystals}) {\n    const classes = useStyles();\n    \n    return (\n        <React.Fragment>\n            {crystals.map((crystal) => {\n                return (\n                    <Card className={classes.bottomGutter} key={crystal.id}>\n                        <CardActionArea target=\"_blank\" rel=\"noreferrer\" href={`https://bdocodex.com/us/item/${crystal.id}`}>\n                            <CardHeader \n                                avatar={\n                                    <Avatar alt=\"crysal icon\" src={crystal.icon} />\n                                }\n                                title={\n                                    <Typography className={`${classes['name']} ${classes[\"rarity-\" + crystal.grade]}`} variant=\"body2\">{crystal.name}</Typography>\n                                }\n                                className={classes.noBottomPad}\n                            />\n                            <CardContent>\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={1}>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"body2\">\n                                            <b>Effect:</b>\n                                            <br />\n                                            {crystal.effect.split(',').map((effect, i) => {\n                                                return (\n                                                    <span key={`effect${effect+i}`}>\n                                                        {effect}<br />\n                                                    </span>\n                                                )\n                                            })}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Break Chance:</b>\n                                            <br />\n                                            {crystal.breakChance}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Socket:</b>\n                                            <br />\n                                            {crystal.socket}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                );\n            })}\n        </React.Fragment>\n    );\n}\n\nexport default CardComponent;","import { Button, Select, InputLabel, MenuItem, FormControl, Input, Popover } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useState, useEffect, useRef } from 'react';\n\n\nfunction FilterPanel({crystals, setCrystals}) {\n    const [state, setState] = useState({\n        anchorEl: false,\n        sockets: [],\n        effects: [],\n        breakChance: [],\n        grades: [\n            {\n                name: \"White\",\n                value: \"0\"\n            },\n            {\n                name: \"Green\",\n                value: \"1\"\n            },\n            {\n                name: \"Blue\",\n                value: \"2\"\n            },\n            {\n                name: \"Yellow\",\n                value: \"3\"\n            },\n            {\n                name: \"Orange\",\n                value: \"4\"\n            }\n        ]\n    });\n    const [searchValue, setSearchValue] = useState(\"\"),\n          [socketValue, setSocketValue] = useState(\"All\"),\n          [breakValue, setBreakValue]   = useState(\"All\"),\n          [effectValue, setEffectValue] = useState(\"All\"),\n          [gradeValue, setGradeValue]   = useState(\"All\");\n\n    const filterTimeout = useRef();\n\n    const handleClick = (event) => {\n        if(state.anchorEl) {\n            setState({ \n                ...state, \n                anchorEl: null\n            });\n        } else {\n            setState({ \n                ...state,\n                anchorEl: event.currentTarget \n            });\n        }\n    };\n\n    useEffect(() => {\n        function handleKeyUp(e) {\n            if(e.code === \"Enter\" || e.code === \"Escape\") {\n                setState(s => ({\n                    ...s,\n                    anchorEl: null\n                }));\n            }\n        }\n\n        document.addEventListener('keyup', handleKeyUp);\n\n        return function cleanup() {\n            document.removeEventListener('keyup', handleKeyUp);\n        }\n    }, []);\n\n    useEffect(() => {\n        const socketList = new Set();\n        const effectList = new Set();\n        const breakList = new Set();\n\n        crystals.forEach(crystal => {\n            breakList.add(crystal.breakChance);\n            socketList.add(crystal.socket);\n            crystal.effect.split(',').forEach(effect => {\n                const plusIndex = effect.indexOf('+');\n                effectList.add(effect.substr(0,plusIndex).trim());\n            });\n            effectList.delete(\"\");\n        });\n\n        setState(s => ({\n            ...s,\n            breakChance: [...breakList],\n            sockets: [...socketList].sort(),\n            effects: [...effectList].sort()\n        }));\n    },[crystals]);\n  \n    const handleClose = () => {\n      setState({\n          ...state,\n          anchorEl: null\n      });\n    };\n\n    useEffect(() => {\n        clearTimeout(filterTimeout.current);\n        let filteredCrystals = [];\n        filterTimeout.current = setTimeout(() => {\n            filteredCrystals = crystals.filter(crystal => {\n                if (!crystal.name.toUpperCase().includes(searchValue.toUpperCase())) return false;\n                if (socketValue !== 'All' && crystal.socket !== socketValue) return false;\n                if (breakValue !== 'All' && crystal.breakChance !== breakValue) return false;\n                if (gradeValue !== 'All' && crystal.grade !== gradeValue) return false;\n                let hasEffect = false;\n                crystal.effect.split(',').forEach(effect => {\n                    const plusIndex = effect.indexOf('+');\n                    if (effect.substr(0,plusIndex).trim() === effectValue) hasEffect = true;\n                });\n                if (effectValue !== 'All' && hasEffect === false) return false;\n                return true;\n            });\n            setCrystals(filteredCrystals);\n        }, 250);\n    }, [searchValue, breakValue, effectValue, socketValue, gradeValue, crystals, setCrystals]);\n\n    const open = Boolean(state.anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    \n    return (\n        <div style={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'row', paddingBottom: 10 }}>\n                <Button variant=\"contained\" disableElevation onClick={handleClick}>\n                    <FilterListIcon /> Filter\n                </Button>\n                <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={state.anchorEl}\n                    onClose={handleClose}\n                    placement=\"bottom-end\"\n                    disablePortal={false}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right',\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                      }}\n                    PaperProps={{\n                        style: {\n                            width: 450,\n                            padding: 15\n                        }\n                    }}\n                >\n                    <div>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel htmlFor=\"search\" shrink={true}>Name</InputLabel>\n                            <Input\n                                placeholder=\"\"\n                                id=\"search\"\n                                value={searchValue} \n                                onChange={event => setSearchValue(event.target.value)}\n                            />\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel id=\"grade-label\">Grade</InputLabel>\n                            <Select \n                                labelId=\"grade-label\"\n                                autoWidth={true} \n                                value={gradeValue}\n                                onChange={event => setGradeValue(event.target.value)}\n                            >\n                                <MenuItem value=\"All\" selected key=\"grade-all\">All</MenuItem>\n                                {state.grades.map((grade, i) => (<MenuItem value={grade.value} key={`grade-${grade.name}`}>{grade.name}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel id=\"effect-label\">Effect</InputLabel>\n                            <Select \n                                labelId=\"effect-label\"\n                                autoWidth={true} \n                                value={effectValue}\n                                onChange={event => setEffectValue(event.target.value)}\n                            >\n                                <MenuItem value=\"All\" selected key=\"effect-1\">All</MenuItem>\n                                {state.effects.map((effect, i) => (<MenuItem value={effect} key={`effect+${i}`}>{effect}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel id=\"break-label\">Break Chance</InputLabel>\n                            <Select \n                                labelId=\"break-label\" \n                                autoWidth={true} \n                                value={breakValue}\n                                onChange={event => setBreakValue(event.target.value)}\n                            >\n                                <MenuItem value=\"All\" key=\"break-1\">All</MenuItem>\n                                {state.breakChance.map((chance, i) => (<MenuItem value={chance} key={`break+${i}`}>{chance}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div>\n                        <FormControl style={{width: '100%'}}>\n                            <InputLabel id=\"socket-label\">Socket</InputLabel>\n                            <Select \n                                labelId=\"socket-label\" \n                                autoWidth={true} \n                                value={socketValue}\n                                onChange={event => setSocketValue(event.target.value)}\n                            >\n                                <MenuItem value=\"All\" selected key=\"socket-1\">All</MenuItem>\n                                {state.sockets.map((socket, i) => (<MenuItem value={socket} key={`socket+${i}`}>{socket}</MenuItem>))}\n                            </Select>\n                        </FormControl>\n                    </div>\n                    <div style={{ textAlign: 'right', paddingTop: 10 }}>\n                        <Button color=\"secondary\" onClick={() => {\n                            setSearchValue('');\n                            setEffectValue('All');\n                            setBreakValue('All');\n                            setSocketValue('All');\n                            setGradeValue('All');\n                        }}>Clear All</Button>\n                        <Button onClick={handleClose}>Close</Button>\n                    </div>\n              </Popover>\n        </div>\n    )\n}\n\nexport default FilterPanel;","import withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport crystalData from '../data/crystals.json';\nimport TableView from './TableView';\nimport CardView from './CardView';\nimport FilterPanel from './FilterPanel';\nimport { useState } from 'react';\n\nfunction DataView({width}) {\n    const view = [];\n    const [crystals, setCrystals] = useState(crystalData);\n\n    view.push((<FilterPanel crystals={crystalData} setCrystals={setCrystals} key=\"filterpanel\" />))\n\n    if(isWidthDown('xs', width)) {\n        view.push((<CardView crystals={crystals} key=\"cardview\" />));\n    } else {\n        view.push((<TableView crystals={crystals} key=\"tableview\" />));\n    }\n\n    return view;\n}\n           \nexport default withWidth()(DataView);","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {  unstable_createMuiStrictModeTheme as createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport './App.css';\nimport DataView from './components/DataView';\nimport React from 'react';\nimport 'fontsource-roboto';\nimport { Link } from '@material-ui/core';\n\nlet darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\ndarkTheme = responsiveFontSizes(darkTheme);\n\nfunction App() {\n  return (\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container>\n          <div style={{paddingBottom: 30}}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>BDO Crystalz</Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>Black Desert Online Crystal Reference</Typography>\n            <Typography gutterBottom>Need to know if there is an AP crystal for your offhand weapon? Now you can find out!</Typography>\n            <Typography gutterBottom>This is a reference for Black Desert Online items called crystals. Crystals are used to slot into specific gear pieces in order to give you some added effects. With this site, you can easily find which crystals suit your specific needs by filtering by the crystal's <em>grade</em>, <em>the effects it grants</em>, <em>which slot it goes in</em>, and <em>how often it is likely to break when you die.</em></Typography>\n            <Typography gutterBottom>See something that's wrong? Have a suggestion for new features? Create an <strong>issue</strong> or <strong>pull request</strong> on our <Link target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/AlphaOptix/bdocrystalz\">Github</Link>.</Typography>\n          </div>\n          <DataView />\n        </Container>\n      </ThemeProvider>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}