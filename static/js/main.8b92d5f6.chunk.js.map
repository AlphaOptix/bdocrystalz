{"version":3,"sources":["components/TableView/index.js","components/CardView/index.js","components/FilterMenu/EffectControl.js","components/FilterMenu/GradeControl.js","components/FilterMenu/SearchControl.js","components/FilterMenu/SocketControl.js","components/FilterMenu/index.js","components/FilterPanel/index.js","components/DataView/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","icon","margin","name","fontWeight","textDecoration","color","StyledTableRow","withStyles","theme","root","backgroundColor","palette","action","hover","TableRow","TableView","crystals","classes","TableContainer","component","Paper","Table","TableHead","TableCell","width","TableBody","map","crystal","src","style","alt","cover","Link","className","grade","target","rel","href","id","effect","split","i","Container","disableGutters","breakChance","socket","bottomGutter","marginBottom","noBottomPad","paddingBottom","CardComponent","Fragment","Card","CardActionArea","CardHeader","avatar","title","Typography","variant","CardContent","Grid","container","direction","justify","alignItems","spacing","item","xs","EffectControl","effects","effectValue","setEffectValue","FormControl","InputLabel","Select","labelId","autoWidth","value","onChange","event","MenuItem","selected","GradeControl","gradeValue","setGradeValue","grades","SearchControl","searchValue","setSearchValue","htmlFor","shrink","Input","placeholder","SocketControl","sockets","socketValue","setSocketValue","FilterMenu","setCrystals","anchor","setAnchor","useState","state","setState","breakValue","setBreakValue","filterTimeout","useRef","useEffect","handleKeyUp","e","code","document","addEventListener","removeEventListener","socketList","Set","effectList","breakList","forEach","add","plusIndex","indexOf","substr","trim","delete","s","sort","handleClose","clearTimeout","current","filteredCrystals","setTimeout","filter","toUpperCase","includes","hasEffect","open","Boolean","undefined","Popover","anchorEl","onClose","placement","disablePortal","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","padding","textAlign","paddingTop","Button","onClick","FilterPanel","display","justifyContent","flexDirection","disableElevation","currentTarget","withWidth","view","crystalData","push","isWidthDown","CardView","darkTheme","createMuiTheme","type","responsiveFontSizes","App","ThemeProvider","CssBaseline","gutterBottom","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b92d5f6.chunk.js","sourcesContent":["import { \n    Container,\n    Link,\n    makeStyles, \n    Paper,\n    Table, \n    TableBody, \n    TableCell, \n    TableContainer,\n    TableHead, \n    TableRow,\n    withStyles\n} from '@material-ui/core';\nimport React from 'react';\nimport Image from 'material-ui-image';\n\nconst useStyles = makeStyles({\n    icon: {\n        margin: '10px 10px 10px 5px'\n    },\n    name: {\n        fontWeight: 'bold',\n        textDecoration: 'none !important',\n        '&:hover': {\n            textDecoration: 'underline !important'\n        } \n    },\n    'rarity-4': {\n        color: '#d36300 !important'\n    },\n    'rarity-3': {\n        color: '#f6c232 !important'\n    },\n    'rarity-2': {\n        color: '#0391c4 !important'\n    },\n    'rarity-1': {\n        color: '#5ff369 !important'\n    },\n    'rarity-0': {\n        color: '#fff !important'\n    }\n})\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\nfunction TableView({crystals}){\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <Table>\n                <TableHead>\n                    <TableRow key=\"header-row\">\n                        <TableCell width=\"5%\"></TableCell>\n                        <TableCell width=\"40%\">Crystal</TableCell>\n                        <TableCell>Effect</TableCell>\n                        <TableCell width=\"10%\">Break Chance</TableCell>\n                        <TableCell width=\"15%\">Socket</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {crystals.map((crystal) => {\n                        return (\n                            <StyledTableRow key={`crystal-${crystal.id}`}>\n                                <TableCell>\n                                    <Image color=\"transparent\" src={crystal.icon} style={{width:44}} alt=\"icon\" cover />\n                                </TableCell>\n                                <TableCell><Link className={`${classes['name']} ${classes[\"rarity-\" + crystal.grade]}`} target=\"_blank\" rel=\"noreferrer\" href={`https://bdocodex.com/us/item/${crystal.id}`}>{crystal.name}</Link></TableCell>\n                                <TableCell>\n                                    {crystal.effect.split(',').map((effect, i) => {\n                                        return (\n                                            <Container key={`effect${effect + i}`} disableGutters>\n                                                {effect}&nbsp;\n                                            </Container>\n                                        )\n                                    })}\n                                </TableCell>\n                                <TableCell>{crystal.breakChance}</TableCell>\n                                <TableCell>{crystal.socket}</TableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default TableView;","import React from 'react';\nimport { \n    Card, \n    CardHeader, \n    CardContent, \n    makeStyles, \n    Typography, \n    CardActionArea,\n    Grid\n} from '@material-ui/core';\nimport Image from 'material-ui-image';\n\nconst useStyles = makeStyles({\n    icon: {\n        margin: '10px 10px 10px 5px'\n    },\n    name: {\n        fontWeight: 'bold',\n        textDecoration: 'none !important',\n        '&:hover': {\n            textDecoration: 'underline !important'\n        } \n    },\n    bottomGutter: {\n        marginBottom: 10\n    },\n    noBottomPad: {\n        paddingBottom: 0\n    },\n    'rarity-4': {\n        color: '#d36300 !important'\n    },\n    'rarity-3': {\n        color: '#f6c232 !important'\n    },\n    'rarity-2': {\n        color: '#0391c4 !important'\n    },\n    'rarity-1': {\n        color: '#5ff369 !important'\n    },\n    'rarity-0': {\n        color: '#fff !important'\n    }\n})\n\nfunction CardComponent({crystals}) {\n    const classes = useStyles();\n    \n    return (\n        <React.Fragment>\n            {crystals.map((crystal) => {\n                return (\n                    <Card className={classes.bottomGutter} key={crystal.id}>\n                        <CardActionArea target=\"_blank\" rel=\"noreferrer\" href={`https://bdocodex.com/us/item/${crystal.id}`}>\n                            <CardHeader \n                                avatar={\n                                    <Image color=\"transparent\" src={crystal.icon} style={{width:34}} alt=\"icon\" cover />\n                                }\n                                title={\n                                    <Typography className={`${classes['name']} ${classes[\"rarity-\" + crystal.grade]}`} variant=\"body2\">{crystal.name}</Typography>\n                                }\n                                className={classes.noBottomPad}\n                            />\n                            <CardContent>\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={1}>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"body2\">\n                                            <b>Effect:</b>\n                                            <br />\n                                            {crystal.effect.split(',').map((effect, i) => {\n                                                return (\n                                                    <span key={`effect${effect+i}`}>\n                                                        {effect}<br />\n                                                    </span>\n                                                )\n                                            })}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Break Chance:</b>\n                                            <br />\n                                            {crystal.breakChance}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Socket:</b>\n                                            <br />\n                                            {crystal.socket}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                );\n            })}\n        </React.Fragment>\n    );\n}\n\nexport default CardComponent;","import { Container, Select, InputLabel, MenuItem, FormControl } from '@material-ui/core';\n\n\nfunction EffectControl({effects, effectValue, setEffectValue}){\n    return (\n        <Container>\n            <FormControl style={{width: '100%'}}>\n                <InputLabel id=\"effect-label\">Effect</InputLabel>\n                <Select \n                    labelId=\"effect-label\"\n                    autoWidth={true} \n                    value={effectValue}\n                    onChange={event => setEffectValue(event.target.value)}\n                >\n                    <MenuItem value=\"All\" selected key=\"effect-1\">All</MenuItem>\n                    {effects.map((effect, i) => (<MenuItem value={effect} key={`effect+${i}`}>{effect}</MenuItem>))}\n                </Select>\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default EffectControl;","import { Container, Select, InputLabel, MenuItem, FormControl } from '@material-ui/core';\n\nfunction GradeControl({gradeValue, setGradeValue, grades}){\n    return (\n        <Container>\n            <FormControl style={{width: '100%'}}>\n                <InputLabel id=\"grade-label\">Grade</InputLabel>\n                <Select \n                    labelId=\"grade-label\"\n                    autoWidth={true} \n                    value={gradeValue}\n                    onChange={event => setGradeValue(event.target.value)}\n                >\n                    <MenuItem value=\"All\" selected key=\"grade-all\">All</MenuItem>\n                    {grades.map((grade, i) => (<MenuItem value={grade.value} key={`grade-${grade.name}`}>{grade.name}</MenuItem>))}\n                </Select>\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default GradeControl;","import { Container, InputLabel, FormControl, Input } from '@material-ui/core';\n\nfunction SearchControl({searchValue, setSearchValue}){\n    return (\n        <Container>\n            <FormControl style={{width: '100%'}}>\n                <InputLabel htmlFor=\"search\" shrink={true}>Name</InputLabel>\n                <Input\n                    placeholder=\"\"\n                    id=\"search\"\n                    value={searchValue} \n                    onChange={event => setSearchValue(event.target.value)}\n                />\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default SearchControl;","import { Container, Select, InputLabel, MenuItem, FormControl } from '@material-ui/core';\n\n\nfunction SocketControl({sockets, socketValue, setSocketValue}){\n    return (\n        <Container>\n            <FormControl style={{width: '100%'}}>\n                <InputLabel id=\"socket-label\">Socket</InputLabel>\n                <Select \n                    labelId=\"socket-label\" \n                    autoWidth={true} \n                    value={socketValue}\n                    onChange={event => setSocketValue(event.target.value)}\n                >\n                    <MenuItem value=\"All\" selected key=\"socket-1\">All</MenuItem>\n                    {sockets.map((socket, i) => (<MenuItem value={socket} key={`socket+${i}`}>{socket}</MenuItem>))}\n                </Select>\n            </FormControl>\n        </Container>\n    );\n}\n\nexport default SocketControl;","import { Button, Popover, Container } from '@material-ui/core';\nimport { useState, useEffect, useRef } from 'react';\nimport EffectControl from './EffectControl';\nimport GradeControl from './GradeControl';\nimport SearchControl from './SearchControl';\nimport SocketControl from './SocketControl';\n\nfunction FilterMenu({crystals, setCrystals, anchor, setAnchor}){\n    const [state, setState] = useState({\n        sockets: [],\n        effects: [],\n        breakChance: [],\n        grades: [\n            {\n                name: \"White\",\n                value: \"0\"\n            },\n            {\n                name: \"Green\",\n                value: \"1\"\n            },\n            {\n                name: \"Blue\",\n                value: \"2\"\n            },\n            {\n                name: \"Yellow\",\n                value: \"3\"\n            },\n            {\n                name: \"Orange\",\n                value: \"4\"\n            }\n        ]\n    });\n\n    const [searchValue, setSearchValue] = useState(\"\"),\n    [socketValue, setSocketValue] = useState(\"All\"),\n    [breakValue, setBreakValue]   = useState(\"All\"),\n    [effectValue, setEffectValue] = useState(\"All\"),\n    [gradeValue, setGradeValue]   = useState(\"All\");\n\n    const filterTimeout = useRef();\n\n    useEffect(() => {\n        function handleKeyUp(e) {\n            if(e.code === \"Enter\" || e.code === \"Escape\") {\n                setAnchor(null);\n            }\n        }\n\n        document.addEventListener('keyup', handleKeyUp);\n\n        return function cleanup() {\n            document.removeEventListener('keyup', handleKeyUp);\n        }\n    }, [setAnchor]);\n\n    useEffect(() => {\n        const socketList = new Set();\n        const effectList = new Set();\n        const breakList = new Set();\n\n        crystals.forEach(crystal => {\n            breakList.add(crystal.breakChance);\n            socketList.add(crystal.socket);\n            crystal.effect.split(',').forEach(effect => {\n                const plusIndex = effect.indexOf('+');\n                effectList.add(effect.substr(0,plusIndex).trim());\n            });\n            effectList.delete(\"\");\n        });\n\n        setState(s => ({\n            ...s,\n            breakChance: [...breakList],\n            sockets: [...socketList].sort(),\n            effects: [...effectList].sort()\n        }));\n    },[crystals]);\n  \n    const handleClose = () => {\n        setAnchor(null);\n    };\n\n    useEffect(() => {\n        clearTimeout(filterTimeout.current);\n        let filteredCrystals = [];\n        filterTimeout.current = setTimeout(() => {\n            filteredCrystals = crystals.filter(crystal => {\n                if (!crystal.name.toUpperCase().includes(searchValue.toUpperCase())) return false;\n                if (socketValue !== 'All' && crystal.socket !== socketValue) return false;\n                if (breakValue !== 'All' && crystal.breakChance !== breakValue) return false;\n                if (gradeValue !== 'All' && crystal.grade !== gradeValue) return false;\n                let hasEffect = false;\n                crystal.effect.split(',').forEach(effect => {\n                    const plusIndex = effect.indexOf('+');\n                    if (effect.substr(0,plusIndex).trim() === effectValue) hasEffect = true;\n                });\n                if (effectValue !== 'All' && hasEffect === false) return false;\n                return true;\n            });\n            setCrystals(filteredCrystals);\n        }, 250);\n    }, [searchValue, breakValue, effectValue, socketValue, gradeValue, crystals, setCrystals]);\n\n\n    const open = Boolean(anchor);\n    const id = open ? 'simple-popover' : undefined;\n\n    return(\n        <Popover\n            id={id}\n            open={open}\n            anchorEl={anchor}\n            onClose={handleClose}\n            placement=\"bottom-end\"\n            disablePortal={false}\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            PaperProps={{\n                style: {\n                    width: 450,\n                    padding: '20px 0'\n                }\n            }}\n        >\n            <SearchControl searchValue={searchValue} setSearchValue={setSearchValue} /> \n            <GradeControl grades={state.grades} gradeValue={gradeValue} setGradeValue={setGradeValue} />\n            <EffectControl effects={state.effects} effectValue={effectValue} setEffectValue={setEffectValue} />\n            <SocketControl sockets={state.sockets} socketValue={socketValue} setSocketValue={setSocketValue} />\n            <Container style={{ textAlign: 'right', paddingTop: 10 }}>\n                <Button color=\"secondary\" onClick={() => {\n                    setSearchValue('');\n                    setEffectValue('All');\n                    setBreakValue('All');\n                    setSocketValue('All');\n                    setGradeValue('All');\n                }}>Clear All</Button>\n                <Button onClick={handleClose}>Close</Button>\n            </Container>\n        </Popover>\n    );\n}\n\nexport default FilterMenu;","import { Button, Container } from '@material-ui/core';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useState } from 'react';\nimport FilterMenu from '../FilterMenu';\n\n\nfunction FilterPanel({crystals, setCrystals}) {\n    const [anchor, setAnchor] = useState(null);\n\n\n    const handleClick = (event) => {\n        if(anchor) {\n            setAnchor(null);\n        } else {\n            setAnchor(event.currentTarget);\n        }\n    };\n\n    return (\n        <Container style={{ display: 'flex', justifyContent: 'flex-end', flexDirection: 'row', paddingBottom: 10 }} disableGutters>\n                <Button variant=\"contained\" disableElevation onClick={handleClick}>\n                    <FilterListIcon /> Filter\n                </Button>\n                <FilterMenu crystals={crystals} setCrystals={setCrystals} anchor={anchor} setAnchor={setAnchor} />\n        </Container>\n    )\n}\n\nexport default FilterPanel;","import withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport crystalData from '../../data/crystals.json';\nimport TableView from '../TableView';\nimport CardView from '../CardView';\nimport FilterPanel from '../FilterPanel';\nimport { useState } from 'react';\n\nfunction DataView({width}) {\n    const view = [];\n    const [crystals, setCrystals] = useState(crystalData);\n\n    view.push((<FilterPanel crystals={crystalData} setCrystals={setCrystals} key=\"filterpanel\" />))\n\n    if(isWidthDown('xs', width)) {\n        view.push((<CardView crystals={crystals} key=\"cardview\" />));\n    } else {\n        view.push((<TableView crystals={crystals} key=\"tableview\" />));\n    }\n\n    return view;\n}\n           \nexport default withWidth()(DataView);","import Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {  unstable_createMuiStrictModeTheme as createMuiTheme, ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\nimport './App.css';\nimport DataView from './components/DataView';\nimport React from 'react';\nimport 'fontsource-roboto';\nimport { Link } from '@material-ui/core';\n\nlet darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\ndarkTheme = responsiveFontSizes(darkTheme);\n\nfunction App() {\n  return (\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <Container style={{ paddingTop: 25, paddingBottom: 25 }}>\n          <Container style={{ paddingBottom: 30 }} disableGutters>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>BDO Crystalz</Typography>\n            <Typography variant=\"h6\" component=\"h2\" gutterBottom>Black Desert Online Crystal Reference</Typography>\n            <Typography gutterBottom>Need to know if there is an AP crystal for your offhand weapon? Now you can find out!</Typography>\n            <Typography gutterBottom>This is a reference for Black Desert Online items called crystals. Crystals are used to slot into specific gear pieces in order to give you some added effects. With this site, you can easily find which crystals suit your specific needs by filtering by the crystal's <em>grade</em>, <em>the effects it grants</em>, <em>which slot it goes in</em>, and <em>how often it is likely to break when you die.</em></Typography>\n            <Typography gutterBottom>See something that's wrong? Have a suggestion for new features? Create an <strong>issue</strong> or <strong>pull request</strong> on our <Link target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/AlphaOptix/bdocrystalz\">Github</Link>.</Typography>\n          </Container>\n          <DataView />\n          <Container style={{ marginTop: 25, display: 'flex', justifyContent: 'center' }}>\n            <Typography variant=\"body2\">Copyright &copy; 2016-2021 AlphaOptix</Typography>\n          </Container>\n        </Container>\n      </ThemeProvider>\n      \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}