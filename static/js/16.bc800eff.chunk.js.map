{"version":3,"sources":["components/FilterMenu/index.js","components/FilterPanel/index.js"],"names":["EffectControl","lazy","GradeControl","SearchControl","SocketControl","BreakControl","FilterMenu","crystals","setCrystals","anchor","setAnchor","useState","sockets","effects","breakChance","grades","name","value","state","setState","searchValue","setSearchValue","socketValue","setSocketValue","breakValue","setBreakValue","effectValue","setEffectValue","gradeValue","setGradeValue","filterTimeout","useRef","useEffect","handleKeyUp","e","code","document","addEventListener","removeEventListener","socketList","Set","effectList","forEach","crystal","add","socket","effect","split","plusIndex","indexOf","substr","trim","delete","s","sort","handleClose","clearTimeout","current","filteredCrystals","setTimeout","filter","toUpperCase","includes","grade","hasEffect","open","Boolean","id","undefined","Popover","anchorEl","onClose","placement","disablePortal","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","style","width","padding","fallback","Container","display","justifyContent","CircularProgress","disableShrink","size","textAlign","paddingTop","Button","color","onClick","FilterPanel","flexDirection","paddingBottom","disableGutters","variant","disableElevation","event","currentTarget"],"mappings":"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","file":"static/js/16.bc800eff.chunk.js","sourcesContent":["import { Button, Popover, Container, CircularProgress } from '@material-ui/core'\nimport { useState, useEffect, useRef, lazy, Suspense } from 'react'\n\nconst EffectControl = lazy(() => import('./EffectControl'))\nconst GradeControl = lazy(() => import('./GradeControl'))\nconst SearchControl = lazy(() => import('./SearchControl'))\nconst SocketControl = lazy(() => import('./SocketControl'))\nconst BreakControl = lazy(() => import('./BreakControl'))\n\nfunction FilterMenu ({ crystals, setCrystals, anchor, setAnchor }) {\n  const [state, setState] = useState({\n    sockets: [],\n    effects: [],\n    breakChance: ['None', 'Low', 'High', 'Very High'],\n    grades: [\n      {\n        name: 'White',\n        value: '0'\n      },\n      {\n        name: 'Green',\n        value: '1'\n      },\n      {\n        name: 'Blue',\n        value: '2'\n      },\n      {\n        name: 'Yellow',\n        value: '3'\n      },\n      {\n        name: 'Orange',\n        value: '4'\n      }\n    ]\n  })\n\n  const [searchValue, setSearchValue] = useState('')\n  const [socketValue, setSocketValue] = useState('All')\n  const [breakValue, setBreakValue] = useState('All')\n  const [effectValue, setEffectValue] = useState('All')\n  const [gradeValue, setGradeValue] = useState('All')\n\n  const filterTimeout = useRef()\n\n  useEffect(() => {\n    function handleKeyUp (e) {\n      if (e.code === 'Enter' || e.code === 'Escape') {\n        setAnchor(null)\n      }\n    }\n\n    document.addEventListener('keyup', handleKeyUp)\n\n    return function cleanup () {\n      document.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setAnchor])\n\n  useEffect(() => {\n    const socketList = new Set()\n    const effectList = new Set()\n\n    crystals.forEach(crystal => {\n      socketList.add(crystal.socket)\n      crystal.effect.split(',').forEach(effect => {\n        const plusIndex = effect.indexOf('+')\n        effectList.add(effect.substr(0, plusIndex).trim())\n      })\n      effectList.delete('')\n    })\n\n    setState(s => ({\n      ...s,\n      sockets: [...socketList].sort(),\n      effects: [...effectList].sort()\n    }))\n  }, [crystals])\n\n  const handleClose = () => {\n    setAnchor(null)\n  }\n\n  useEffect(() => {\n    clearTimeout(filterTimeout.current)\n    let filteredCrystals = []\n    filterTimeout.current = setTimeout(() => {\n      filteredCrystals = crystals.filter(crystal => {\n        if (!crystal.name.toUpperCase().includes(searchValue.toUpperCase()))\n          return false\n        if (socketValue !== 'All' && crystal.socket !== socketValue)\n          return false\n        if (breakValue !== 'All' && crystal.breakChance !== breakValue)\n          return false\n        if (gradeValue !== 'All' && crystal.grade !== gradeValue) return false\n        let hasEffect = false\n        crystal.effect.split(',').forEach(effect => {\n          const plusIndex = effect.indexOf('+')\n          if (effect.substr(0, plusIndex).trim() === effectValue)\n            hasEffect = true\n        })\n        if (effectValue !== 'All' && hasEffect === false) return false\n        return true\n      })\n      setCrystals(filteredCrystals)\n    }, 250)\n  }, [\n    searchValue,\n    breakValue,\n    effectValue,\n    socketValue,\n    gradeValue,\n    crystals,\n    setCrystals\n  ])\n\n  const open = Boolean(anchor)\n  const id = open ? 'simple-popover' : undefined\n\n  return (\n    <Popover\n      id={id}\n      open={open}\n      anchorEl={anchor}\n      onClose={handleClose}\n      placement='bottom-end'\n      disablePortal={false}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      PaperProps={{\n        style: {\n          width: 450,\n          padding: '20px 0'\n        }\n      }}\n    >\n      <Suspense\n        fallback={\n          <Container style={{ display: 'flex', justifyContent: 'center' }}>\n            <CircularProgress disableShrink size={40} />\n          </Container>\n        }\n      >\n        <SearchControl\n          searchValue={searchValue}\n          setSearchValue={setSearchValue}\n        />\n        <GradeControl\n          grades={state.grades}\n          gradeValue={gradeValue}\n          setGradeValue={setGradeValue}\n        />\n        <EffectControl\n          effects={state.effects}\n          effectValue={effectValue}\n          setEffectValue={setEffectValue}\n        />\n        <BreakControl\n          breakChance={state.breakChance}\n          breakValue={breakValue}\n          setBreakValue={setBreakValue}\n        />\n        <SocketControl\n          sockets={state.sockets}\n          socketValue={socketValue}\n          setSocketValue={setSocketValue}\n        />\n        <Container style={{ textAlign: 'right', paddingTop: 10 }}>\n          <Button\n            color='secondary'\n            onClick={() => {\n              setSearchValue('')\n              setEffectValue('All')\n              setBreakValue('All')\n              setSocketValue('All')\n              setGradeValue('All')\n            }}\n          >\n            Clear All\n          </Button>\n          <Button onClick={handleClose}>Close</Button>\n        </Container>\n      </Suspense>\n    </Popover>\n  )\n}\n\nexport default FilterMenu\n","import { Button, Container } from '@material-ui/core'\nimport FilterListIcon from '@material-ui/icons/FilterList'\nimport { useState } from 'react'\nimport FilterMenu from '../FilterMenu'\n\nfunction FilterPanel ({ crystals, setCrystals }) {\n  const [anchor, setAnchor] = useState(null)\n\n  const handleClick = event => {\n    if (anchor) {\n      setAnchor(null)\n    } else {\n      setAnchor(event.currentTarget)\n    }\n  }\n\n  return (\n    <Container\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-end',\n        flexDirection: 'row',\n        paddingBottom: 10\n      }}\n      disableGutters\n    >\n      <Button variant='contained' disableElevation onClick={handleClick}>\n        <FilterListIcon /> Filter\n      </Button>\n      <FilterMenu\n        crystals={crystals}\n        setCrystals={setCrystals}\n        anchor={anchor}\n        setAnchor={setAnchor}\n      />\n    </Container>\n  )\n}\n\nexport default FilterPanel\n"],"sourceRoot":""}