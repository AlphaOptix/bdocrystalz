{"version":3,"sources":["components/CardView/index.js"],"names":["useStyles","makeStyles","icon","margin","name","fontWeight","textDecoration","bottomGutter","marginBottom","noBottomPad","paddingBottom","color","textShadow","CardComponent","crystals","classes","Fragment","map","crystal","className","target","rel","href","id","avatar","src","process","style","width","alt","cover","title","grade","variant","container","direction","justify","alignItems","spacing","item","xs","effect","split","i","breakChance","socket"],"mappings":"+HAAA,iHAYMA,EAAYC,YAAW,CACzBC,KAAM,CACFC,OAAQ,sBAEZC,KAAM,CACFC,WAAY,OACZC,eAAgB,kBAChB,UAAW,CACPA,eAAgB,yBAGxBC,aAAc,CACVC,aAAc,IAElBC,YAAa,CACTC,cAAe,GAEnB,WAAY,CACRC,MAAO,qBACPC,WAAY,uBAEhB,WAAY,CACRD,MAAO,qBACPC,WAAY,uBAEhB,WAAY,CACRD,MAAO,qBACPC,WAAY,uBAEhB,WAAY,CACRD,MAAO,qBACPC,WAAY,uBAEhB,WAAY,CACRD,MAAO,kBACPC,WAAY,yBA6DLC,UAzDf,YAAoC,IAAZC,EAAW,EAAXA,SACdC,EAAUf,IAEhB,OACI,cAAC,IAAMgB,SAAP,UACKF,EAASG,KAAI,SAACC,GACX,OACI,cAAC,IAAD,CAAMC,UAAWJ,EAAQR,aAAzB,SACI,eAAC,IAAD,CAAgBa,OAAO,SAASC,IAAI,aAAaC,KAAI,uCAAkCJ,EAAQK,IAA/F,UACI,cAAC,IAAD,CACIC,OACI,cAAC,IAAD,CAAOb,MAAM,cAAcc,IAAKC,eAAA,kCAAoDR,EAAQK,GAA5D,QAAsEI,MAAO,CAACC,MAAM,IAAKC,IAAI,OAAOC,OAAK,IAE7IC,MACI,cAAC,IAAD,CAAYZ,UAAS,UAAKJ,EAAO,KAAZ,YAAwBA,EAAQ,UAAYG,EAAQc,QAAUC,QAAQ,QAA3F,SAAoGf,EAAQd,OAEhHe,UAAWJ,EAAQN,cAEvB,cAAC,IAAD,UACI,eAAC,IAAD,CAAMyB,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,aAAaC,QAAS,EAAzF,UACI,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACI,eAAC,IAAD,CAAYP,QAAQ,QAApB,UACI,wCACA,uBACCf,EAAQuB,OAAOC,MAAM,KAAKzB,KAAI,SAACwB,EAAQE,GACpC,OACI,iCACKF,EAAO,yBADZ,gBAAoBA,EAAOE,YAO3C,cAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,EAAf,SACI,eAAC,IAAD,CAAYP,QAAQ,QAApB,UACI,8CACA,uBACCf,EAAQ0B,iBAGjB,cAAC,IAAD,CAAML,MAAI,EAACC,GAAI,EAAf,SACI,eAAC,IAAD,CAAYP,QAAQ,QAApB,UACI,wCACA,uBACCf,EAAQ2B,qBArCW3B,EAAQK","file":"static/js/10.19434e79.chunk.js","sourcesContent":["import React from 'react';\nimport { \n    Card, \n    CardHeader, \n    CardContent, \n    makeStyles, \n    Typography, \n    CardActionArea,\n    Grid\n} from '@material-ui/core';\nimport Image from 'material-ui-image';\n\nconst useStyles = makeStyles({\n    icon: {\n        margin: '10px 10px 10px 5px'\n    },\n    name: {\n        fontWeight: 'bold',\n        textDecoration: 'none !important',\n        '&:hover': {\n            textDecoration: 'underline !important'\n        } \n    },\n    bottomGutter: {\n        marginBottom: 10\n    },\n    noBottomPad: {\n        paddingBottom: 0\n    },\n    'rarity-4': {\n        color: '#d36300 !important',\n        textShadow: '2px 2px 2px #000000'\n    },\n    'rarity-3': {\n        color: '#f6c232 !important',\n        textShadow: '2px 2px 2px #000000'\n    },\n    'rarity-2': {\n        color: '#0391c4 !important',\n        textShadow: '2px 2px 2px #000000'\n    },\n    'rarity-1': {\n        color: '#5ff369 !important',\n        textShadow: '2px 2px 2px #000000'\n    },\n    'rarity-0': {\n        color: '#fff !important',\n        textShadow: '2px 2px 2px #000000'\n    }\n})\n\nfunction CardComponent({crystals}) {\n    const classes = useStyles();\n    \n    return (\n        <React.Fragment>\n            {crystals.map((crystal) => {\n                return (\n                    <Card className={classes.bottomGutter} key={crystal.id}>\n                        <CardActionArea target=\"_blank\" rel=\"noreferrer\" href={`https://bdocodex.com/us/item/${crystal.id}`}>\n                            <CardHeader \n                                avatar={\n                                    <Image color=\"transparent\" src={process.env.PUBLIC_URL + `/static/images/crystals/${crystal.id}.png`} style={{width:44}} alt=\"icon\" cover />\n                                }\n                                title={\n                                    <Typography className={`${classes['name']} ${classes[\"rarity-\" + crystal.grade]}`} variant=\"body2\">{crystal.name}</Typography>\n                                }\n                                className={classes.noBottomPad}\n                            />\n                            <CardContent>\n                                <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\" spacing={1}>\n                                    <Grid item xs={6}>\n                                        <Typography variant=\"body2\">\n                                            <b>Effect:</b>\n                                            <br />\n                                            {crystal.effect.split(',').map((effect, i) => {\n                                                return (\n                                                    <span key={`effect${effect+i}`}>\n                                                        {effect}<br />\n                                                    </span>\n                                                )\n                                            })}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Break Chance:</b>\n                                            <br />\n                                            {crystal.breakChance}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item xs={3}>\n                                        <Typography variant=\"body2\">\n                                            <b>Socket:</b>\n                                            <br />\n                                            {crystal.socket}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </CardContent>\n                        </CardActionArea>\n                    </Card>\n                );\n            })}\n        </React.Fragment>\n    );\n}\n\nexport default CardComponent;"],"sourceRoot":""}